No config file found, using default configuration
************* Module network-planner-algorithm-tools.microgridDirectLV_improved
C: 59,0: Line too long (91/80)
C: 62,0: Line too long (104/80)
C: 63,0: Line too long (84/80)
C: 64,0: Line too long (110/80)
C: 85,0: Line too long (105/80)
C: 91,0: Line too long (89/80)
C: 93,0: Line too long (105/80)
C:106,0: Line too long (102/80)
C:108,0: Line too long (102/80)
W:146,0: Bad indentation. Found 13 spaces, expected 12
W:148,0: Bad indentation. Found 24 spaces, expected 16
C:165,0: Line too long (86/80)
C:170,0: Line too long (89/80)
C:180,0: Line too long (102/80)
C:182,0: Line too long (102/80)
C:195,0: Line too long (86/80)
C:219,0: Line too long (84/80)
C:225,0: Line too long (100/80)
C:276,0: Line too long (89/80)
C:277,0: Line too long (97/80)
C:278,0: Line too long (105/80)
C:280,0: Line too long (88/80)
C:287,0: Line too long (110/80)
C:289,0: Line too long (104/80)
C:300,0: Line too long (90/80)
C:  1,0: Invalid name "microgridDirectLV_improved" for type module (should match (([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$)
W: 20,0: Relative import 'modules', should be 'network-planner-algorithm-tools.modules'
W: 21,0: Relative import 'modules', should be 'network-planner-algorithm-tools.modules'
W: 22,0: Relative import 'modules', should be 'network-planner-algorithm-tools.modules'
C: 24,0:Usage: Missing docstring
W: 25,4:Usage.__init__: __init__ method from base class 'Exception' is not called
C: 28,0:Error: Missing docstring
W: 29,4:Error.__init__: __init__ method from base class 'Exception' is not called
C: 32,0:generateDictsFromShp: Comma not followed by a space
def generateDictsFromShp(shapeFile,outputPath):
                                  ^^
W: 35,4:generateDictsFromShp: Redefining built-in 'file'
C: 32,0:generateDictsFromShp: Invalid name "generateDictsFromShp" for type function (should match [a-z_][a-z0-9_]{2,30}$)
C: 32,0:generateDictsFromShp: Invalid name "shapeFile" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C: 32,0:generateDictsFromShp: Invalid name "outputPath" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
R: 32,0:generateDictsFromShp: Too many local variables (19/15)
C: 32,25:generateDictsFromShp: Invalid name "shapeFile" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 32,35:generateDictsFromShp: Invalid name "outputPath" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 34,4:generateDictsFromShp: Invalid name "rootDir" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 34,13:generateDictsFromShp: Invalid name "fc" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
W: 40,8:generateDictsFromShp: No exception type(s) specified
C: 42,4:generateDictsFromShp: Invalid name "ds" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 43,4:generateDictsFromShp: Invalid name "ptLayer" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 45,4:generateDictsFromShp: Operator not preceded by a space
    nodesByClusterID=collections.defaultdict(list)
                    ^
C: 45,4:generateDictsFromShp: Invalid name "nodesByClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 46,4:generateDictsFromShp: Operator not preceded by a space
    clusterByNode={}
                 ^
C: 46,4:generateDictsFromShp: Invalid name "clusterByNode" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 47,4:generateDictsFromShp: Operator not preceded by a space
    nodes={}
         ^
C: 48,4:generateDictsFromShp: Operator not preceded by a space
    centers={}
           ^
C: 49,4:generateDictsFromShp: Operator not preceded by a space
    LVCostDict={}
              ^
C: 49,4:generateDictsFromShp: Invalid name "LVCostDict" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 53,8:generateDictsFromShp: Invalid name "nodeWeight" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 54,8:generateDictsFromShp: Invalid name "geomRef" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 55,8:generateDictsFromShp: Invalid name "x" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 56,8:generateDictsFromShp: Invalid name "y" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 57,8:generateDictsFromShp: Invalid name "FID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 59,8:generateDictsFromShp: Operator not preceded by a space
        centers[FID]=network.Node(FID, x, y, nodeWeight) #tum centerlar node olarak tutulur
                    ^
C: 63,8:generateDictsFromShp: Operator not preceded by a space
        clusterByNode[nodes[FID]]=FID #clusterin kendini degil sadece IDsini tutucak
                                 ^
C: 66,8:generateDictsFromShp: Operator not preceded by a space
        LVCostDict[FID]=0
                       ^
C: 70,4:generateDictsFromShp: Comma not followed by a space
    return nodesByClusterID,clusterByNode,nodes,centers,LVCostDict
                           ^^
W: 35,4:generateDictsFromShp: Unused variable 'file'
W: 34,4:generateDictsFromShp: Unused variable 'rootDir'
W: 35,10:generateDictsFromShp: Unused variable 'ext'
C: 72,0:generateSegments: Comma not followed by a space
def generateSegments(centers,searchRadius): #centers=centerDict
                            ^^
C: 72,0:generateSegments: Invalid name "generateSegments" for type function (should match [a-z_][a-z0-9_]{2,30}$)
C: 72,0:generateSegments: Invalid name "searchRadius" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C: 72,0:generateSegments: Missing docstring
C: 72,29:generateSegments: Invalid name "searchRadius" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 74,4:generateSegments: Operator not preceded by a space
    segments=[]
            ^
C: 75,4:generateSegments: Invalid name "nodeCopy" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 76,4:generateSegments: Operator not preceded by a space
    segID=0
         ^
C: 76,4:generateSegments: Invalid name "segID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 77,8:generateSegments: Invalid name "startNode" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 79,12:generateSegments: Invalid name "endNode" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 86,16:generateSegments: Operator not preceded by a space
                segID+=1
                     ^^
C: 86,16:generateSegments: Invalid name "segID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 91,0:maxInClusterDist: Comma not followed by a space
def maxInClusterDist(centerNode,nodesByClusterID): #Returns dist array within the cluster
                               ^^
C: 91,0:maxInClusterDist: Invalid name "maxInClusterDist" for type function (should match [a-z_][a-z0-9_]{2,30}$)
C: 91,0:maxInClusterDist: Invalid name "centerNode" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C: 91,0:maxInClusterDist: Invalid name "nodesByClusterID" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C: 91,0:maxInClusterDist: Missing docstring
C: 91,21:maxInClusterDist: Invalid name "centerNode" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 91,32:maxInClusterDist: Invalid name "nodesByClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C: 92,4:maxInClusterDist: Operator not preceded by a space
    maxdist=0
           ^
C: 94,8:maxInClusterDist: Operator not preceded by a space
        dist=((centerNode.getX()-node.getX())**2+
            ^
                (centerNode.getY()-node.getY())**2)**(.5)
C: 96,8:maxInClusterDist: Operator not preceded by a space
        if dist>=maxdist:
               ^^
C: 97,12:maxInClusterDist: Operator not preceded by a space
            maxdist=dist
                   ^
C:100,0:maxTempInClusterDist: Comma not followed by a space
def maxTempInClusterDist(segment,ClusterByNode,nodesByClusterID):
                                ^^
C:100,0:maxTempInClusterDist: Invalid name "maxTempInClusterDist" for type function (should match [a-z_][a-z0-9_]{2,30}$)
C:100,0:maxTempInClusterDist: Invalid name "ClusterByNode" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C:100,0:maxTempInClusterDist: Invalid name "nodesByClusterID" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C:100,0:maxTempInClusterDist: Missing docstring
C:100,33:maxTempInClusterDist: Invalid name "ClusterByNode" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:100,47:maxTempInClusterDist: Invalid name "nodesByClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:101,4:maxTempInClusterDist: Operator not preceded by a space
    maxDist=0
           ^
C:101,4:maxTempInClusterDist: Invalid name "maxDist" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:103,4:maxTempInClusterDist: Operator not preceded by a space
    tempCenter1,tempCenter2=segment.getNodes()
                           ^
C:103,4:maxTempInClusterDist: Invalid name "tempCenter1" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:103,16:maxTempInClusterDist: Invalid name "tempCenter2" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:105,4:maxTempInClusterDist: Operator not preceded by a space
    tempCenterX=(tempCenter1.getWeight()*tempCenter1.getX()
               ^
        +tempCenter2.getWeight()*tempCenter2.getX())/(tempCenter2.getWeight()+tempCenter1.getWeight())
C:105,4:maxTempInClusterDist: Invalid name "tempCenterX" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:107,4:maxTempInClusterDist: Operator not preceded by a space
    tempCenterY=(tempCenter1.getWeight()*tempCenter1.getY()
               ^
        +tempCenter2.getWeight()*tempCenter2.getY())/(tempCenter2.getWeight()+tempCenter1.getWeight())
C:107,4:maxTempInClusterDist: Invalid name "tempCenterY" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:111,8:maxTempInClusterDist: Operator not preceded by a space
        dist=((tempCenterX-node.getX())**2+(tempCenterY-node.getY())**2)**(.5)
            ^
C:112,8:maxTempInClusterDist: Operator not preceded by a space
        if dist>=maxDist:
               ^^
C:113,12:maxTempInClusterDist: Operator not preceded by a space
            maxDist=dist
                   ^
C:113,12:maxTempInClusterDist: Invalid name "maxDist" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:117,8:maxTempInClusterDist: Operator not preceded by a space
        dist=((tempCenterX-node.getX())**2+(tempCenterY-node.getY())**2)**(.5)
            ^
C:118,8:maxTempInClusterDist: Operator not preceded by a space
        if dist>=maxDist:
               ^^
C:119,12:maxTempInClusterDist: Operator not preceded by a space
            maxDist=dist
                   ^
C:119,12:maxTempInClusterDist: Invalid name "maxDist" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:121,4:maxTempInClusterDist: Comma not followed by a space
    return maxDist,tempCenterX,tempCenterY
                  ^^
C:123,0:totalInClusterCost: Comma not followed by a space
def totalInClusterCost(nodesByClusterID,centers):
                                       ^^
C:123,0:totalInClusterCost: Invalid name "totalInClusterCost" for type function (should match [a-z_][a-z0-9_]{2,30}$)
C:123,0:totalInClusterCost: Invalid name "nodesByClusterID" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C:123,0:totalInClusterCost: Missing docstring
C:123,23:totalInClusterCost: Invalid name "nodesByClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:124,4:totalInClusterCost: Operator not preceded by a space
    totalCost=0
             ^
C:124,4:totalInClusterCost: Invalid name "totalCost" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:125,8:totalInClusterCost: Invalid name "centerID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:127,12:totalInClusterCost: Operator not preceded by a space
            totalCost+=((node.getX()-centers[centerID].getX())**2+
                     ^^
                        (node.getY()-centers[centerID].getY())**2)**(.5)
C:127,12:totalInClusterCost: Invalid name "totalCost" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:131,0:kruskalsAlg: Comma not followed by a space
def kruskalsAlg(segments,nodes):
                        ^^
C:131,0:kruskalsAlg: Invalid name "kruskalsAlg" for type function (should match [a-z_][a-z0-9_]{2,30}$)
C:135,4:kruskalsAlg: Operator not preceded by a space
    numNodes=len(nodes)
            ^
C:135,4:kruskalsAlg: Invalid name "numNodes" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:140,8:kruskalsAlg: Invalid name "node1InNet" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:141,8:kruskalsAlg: Invalid name "node2InNet" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:152,4:kruskalsAlg: Comma not followed by a space
    return tree,segments
               ^^
C:153,0:totalInClusterDistance: Comma not followed by a space
def totalInClusterDistance(nodesByClusterID,centers):
                                           ^^
C:153,0:totalInClusterDistance: Invalid name "totalInClusterDistance" for type function (should match [a-z_][a-z0-9_]{2,30}$)
C:153,0:totalInClusterDistance: Invalid name "nodesByClusterID" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C:153,0:totalInClusterDistance: Missing docstring
C:153,27:totalInClusterDistance: Invalid name "nodesByClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:154,4:totalInClusterDistance: Operator not preceded by a space
    totalDistance=0
                 ^
C:154,4:totalInClusterDistance: Invalid name "totalDistance" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:155,8:totalInClusterDistance: Invalid name "centerID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:157,12:totalInClusterDistance: Operator not preceded by a space
            totalDistance+=((node.getX()-centers[centerID].getX())**2+
                         ^^
                        (node.getY()-centers[centerID].getY())**2)**(.5)
C:157,12:totalInClusterDistance: Invalid name "totalDistance" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:163,0:run: Comma not followed by a space
def run(centers,nodesByClusterID,clusterByNode,sr):
               ^^
C:163,0:run: Invalid name "nodesByClusterID" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C:163,0:run: Invalid name "clusterByNode" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C:163,0:run: Invalid name "sr" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C:163,0:run: Missing docstring
R:163,0:run: Too many local variables (25/15)
C:163,16:run: Invalid name "nodesByClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:163,33:run: Invalid name "clusterByNode" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:163,47:run: Invalid name "sr" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:164,4:run: Operator not preceded by a space
    segments=generateSegments(centers,sr)
            ^
C:165,4:run: Operator not preceded by a space
    minTree,segments=kruskalsAlg(segments,centers) #tree1 is minTree at the beginning.
                    ^
C:165,4:run: Invalid name "minTree" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:166,4:run: Operator not preceded by a space
    minTotalCost=len(centers)*10000
                ^
C:166,4:run: Invalid name "minTotalCost" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:167,4:run: Operator not preceded by a space
    minNodesByClusterID=copy.deepcopy(nodesByClusterID)
                       ^
C:167,4:run: Invalid name "minNodesByClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:168,4:run: Operator not preceded by a space
    minCenters=copy.deepcopy(centers)
              ^
C:168,4:run: Invalid name "minCenters" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:172,8:run: Operator not preceded by a space
        maxDist=0 # can be anything less than 500
               ^
C:172,8:run: Invalid name "maxDist" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:174,8:run: Operator not preceded by a space
        maxDist=101 # can be anything greater than 500
               ^
C:174,8:run: Invalid name "maxDist" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:177,4:run: Operator not preceded by a space
    tempCenter1,tempCenter2=segments[0].getNodes()
                           ^
C:177,4:run: Invalid name "tempCenter1" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:177,16:run: Invalid name "tempCenter2" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:179,4:run: Operator not preceded by a space
    tempCenterX=(tempCenter1.getWeight()*tempCenter1.getX()
               ^
        +tempCenter2.getWeight()*tempCenter2.getX())/(tempCenter2.getWeight()+tempCenter1.getWeight())
C:179,4:run: Invalid name "tempCenterX" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:181,4:run: Operator not preceded by a space
    tempCenterY=(tempCenter1.getWeight()*tempCenter1.getY()
               ^
        +tempCenter2.getWeight()*tempCenter2.getY())/(tempCenter2.getWeight()+tempCenter1.getWeight())
C:181,4:run: Invalid name "tempCenterY" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:186,8:run: Operator not preceded by a space
        segment=segments[0]
               ^
C:189,8:run: Operator not preceded by a space
        center1,center2=segment.getNodes()
                       ^
C:191,8:run: Operator not preceded by a space
        weight=center2.getWeight()+center1.getWeight()
              ^
C:192,8:run: Operator not preceded by a space
        baseClusterID=min(clusterByNode[center1],clusterByNode[center2])
                     ^
C:192,8:run: Invalid name "baseClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:193,8:run: Operator not preceded by a space
        mergingClusterID=max(clusterByNode[center1],clusterByNode[center2])
                        ^
C:193,8:run: Invalid name "mergingClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:197,8:run: Comma not followed by a space
        centers[baseClusterID].setXY(tempCenterX,tempCenterY)
                                                ^^
C:203,12:run: Operator not preceded by a space
            clusterByNode[node]=baseClusterID
                               ^
C:205,8:run: Operator not preceded by a space
        segments=generateSegments(centers,sr) # generate segments for new graph
                ^
C:206,8:run: Operator not preceded by a space
        newTree,segments=kruskalsAlg(segments,centers)#returns sorted segments
                        ^
C:206,8:run: Invalid name "newTree" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:208,8:run: Operator not preceded by a space
        TotalTransformerCost=len(centers)*10000
                            ^
C:208,8:run: Invalid name "TotalTransformerCost" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:210,8:run: Operator not preceded by a space
        LVCost=totalInClusterDistance(nodesByClusterID,centers)*2
              ^
C:210,8:run: Invalid name "LVCost" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:211,8:run: Operator not preceded by a space
        newTotalCost=TotalTransformerCost+LVCost
                    ^
C:211,8:run: Invalid name "newTotalCost" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:214,12:run: Operator not preceded by a space
            minNodesByClusterID=copy.deepcopy(nodesByClusterID)
                               ^
C:214,12:run: Invalid name "minNodesByClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:215,12:run: Operator not preceded by a space
            minTree=copy.deepcopy(newTree)
                   ^
C:215,12:run: Invalid name "minTree" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:216,12:run: Operator not preceded by a space
            minCenters=copy.deepcopy(centers)
                      ^
C:216,12:run: Invalid name "minCenters" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:217,12:run: Operator not preceded by a space
            minTotalCost=newTotalCost
                        ^
C:217,12:run: Invalid name "minTotalCost" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
W:223,8:run: No exception type(s) specified
C:222,12:run: Operator not preceded by a space
            segment=segments[0]
                   ^
C:225,8:run: Operator not preceded by a space
        maxDist,tempCenterX,tempCenterY=maxTempInClusterDist(segment,clusterByNode,nodesByClusterID)
                                       ^
C:225,8:run: Invalid name "maxDist" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:225,16:run: Invalid name "tempCenterX" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:225,28:run: Invalid name "tempCenterY" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:227,4:run: Comma not followed by a space
    return minTotalCost,minTree,minCenters,minNodesByClusterID
                       ^^
C:230,0:addLVSeg: Comma not followed by a space
def addLVSeg(tree,centers,nodesByClusterID):#single points line from the root
                 ^^
C:230,0:addLVSeg: Invalid name "addLVSeg" for type function (should match [a-z_][a-z0-9_]{2,30}$)
C:230,0:addLVSeg: Invalid name "nodesByClusterID" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C:230,0:addLVSeg: Missing docstring
C:230,26:addLVSeg: Invalid name "nodesByClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:232,4:addLVSeg: Operator not preceded by a space
    SegID=1000000
         ^
C:232,4:addLVSeg: Invalid name "SegID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:234,8:addLVSeg: Invalid name "centerID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:235,8:addLVSeg: Operator not preceded by a space
        tree._nodesByNetID[centerID]=[]
                                    ^
W:235,8:addLVSeg: Access to a protected member _nodesByNetID of a client class
C:236,8:addLVSeg: Operator not preceded by a space
        tree._network[centerID]=[]
                               ^
W:236,8:addLVSeg: Access to a protected member _network of a client class
C:239,12:addLVSeg: Operator not preceded by a space
            length=((node.getX()-centers[centerID].getX())**2+
                  ^
                        (node.getY()-centers[centerID].getY())**2)**(.5)
C:241,12:addLVSeg: Operator not preceded by a space
            newSeg=network.Seg(SegID, node, centers[centerID], length)
                  ^
C:241,12:addLVSeg: Invalid name "newSeg" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
W:242,12:addLVSeg: Access to a protected member _netIDByNode of a client class
W:243,12:addLVSeg: Access to a protected member _nodesByNetID of a client class
W:244,12:addLVSeg: Access to a protected member _network of a client class
C:249,0:writeCentersToText: Comma not followed by a space
def writeCentersToText(statsFile1,statsFile2, Dict):
                                 ^^
W:254,8:writeCentersToText: Redefining built-in 'id'
C:249,0:writeCentersToText: Invalid name "writeCentersToText" for type function (should match [a-z_][a-z0-9_]{2,30}$)
C:249,0:writeCentersToText: Invalid name "statsFile1" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C:249,0:writeCentersToText: Invalid name "statsFile2" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C:249,0:writeCentersToText: Invalid name "Dict" for type argument (should match [a-z_][a-z0-9_]{2,30}$)
C:249,23:writeCentersToText: Invalid name "statsFile1" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:249,34:writeCentersToText: Invalid name "statsFile2" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:249,46:writeCentersToText: Invalid name "Dict" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:251,4:writeCentersToText: Invalid name "outFile1" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:252,4:writeCentersToText: Invalid name "outFile2" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:254,8:writeCentersToText: Invalid name "id" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:255,8:writeCentersToText: Invalid name "x" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:255,11:writeCentersToText: Invalid name "y" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
W:256,8:writeCentersToText: Unused variable 'weight'
W:255,11:writeCentersToText: Unused variable 'y'
W:255,8:writeCentersToText: Unused variable 'x'
W:254,8:writeCentersToText: Unused variable 'id'
C:263,0:main: Missing docstring
R:263,0:main: Too many local variables (21/15)
C:277,12:main: Operator not preceded by a space
            inputShapeFile=r"C:\Documents and Settings\Selin\Desktop\MicroGrid_5march\MbolaN.shp"
                          ^
C:277,12:main: Invalid name "inputShapeFile" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:280,12:main: Operator not preceded by a space
            outputDir=r"C:\Documents and Settings\Selin\Desktop\MicroGrid_5march\MbolaN"
                     ^
C:280,12:main: Invalid name "outputDir" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:282,12:main: Invalid name "searchRadius" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:285,8:main: Invalid name "startTime" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:287,8:main: Operator not preceded by a space
        nodesByClusterID,clusterByNode,nodes,centers,LVCostDict=generateDictsFromShp(inputShapeFile,outputDir)
                                                               ^
C:287,8:main: Invalid name "nodesByClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:287,25:main: Invalid name "clusterByNode" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:287,53:main: Invalid name "LVCostDict" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:289,8:main: Operator not preceded by a space
        totalCost,tree,centers,nodesByClusterID=run(centers,nodesByClusterID,clusterByNode,searchRadius)
                                               ^
C:289,8:main: Invalid name "totalCost" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:289,31:main: Invalid name "nodesByClusterID" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:292,8:main: Operator not preceded by a space
        statsFile1= outputDir + os.sep + "ClusterSize.txt"
                  ^
C:292,8:main: Invalid name "statsFile1" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:293,8:main: Operator not preceded by a space
        statsFile2= outputDir + os.sep + "Centers.txt"
                  ^
C:293,8:main: Invalid name "statsFile2" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:294,8:main: Comma not followed by a space
        writeCentersToText(statsFile1,statsFile2, centers)
                                     ^^
C:296,8:main: Operator not preceded by a space
        TreeLV=network.Network()
              ^
C:296,8:main: Invalid name "TreeLV" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:298,8:main: Operator not preceded by a space
        TreeWithLV=addLVSeg(TreeLV,centers,nodesByClusterID)
                  ^
C:298,8:main: Invalid name "TreeWithLV" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:301,8:main: Operator not preceded by a space
        finishTime=time.time()
                  ^
C:301,8:main: Invalid name "finishTime" for type variable (should match [a-z_][a-z0-9_]{2,30}$)
C:302,8:main: Comma not followed by a space
        print "Running Time:",finishTime-startTime
                             ^^
C:304,8:main: Operator not followed by a space
        print >>sys.stderr, err.msg
               ^
C:308,8:main: Operator not followed by a space
        print >>sys.stderr, "ERROR:", err.msg
               ^
W:289,18:main: Unused variable 'tree'
W:268,18:main: Unused variable 'args'
W:289,8:main: Unused variable 'totalCost'
W:287,53:main: Unused variable 'LVCostDict'
W:287,39:main: Unused variable 'nodes'
W:268,12:main: Unused variable 'opts'
W: 22,0: Unused import prims
W: 14,0: Unused import gc
W: 16,0: Unused import numpy


Report
======
208 statements analysed.

Raw metrics
-----------

+----------+-------+------+---------+-----------+
|type      |number |%     |previous |difference |
+==========+=======+======+=========+===========+
|code      |217    |82.51 |NC       |NC         |
+----------+-------+------+---------+-----------+
|docstring |10     |3.80  |NC       |NC         |
+----------+-------+------+---------+-----------+
|comment   |9      |3.42  |NC       |NC         |
+----------+-------+------+---------+-----------+
|empty     |27     |10.27 |NC       |NC         |
+----------+-------+------+---------+-----------+



Messages by category
--------------------

+-----------+-------+---------+-----------+
|type       |number |previous |difference |
+===========+=======+=========+===========+
|convention |243    |NC       |NC         |
+-----------+-------+---------+-----------+
|refactor   |3      |NC       |NC         |
+-----------+-------+---------+-----------+
|warning    |32     |NC       |NC         |
+-----------+-------+---------+-----------+
|error      |0      |NC       |NC         |
+-----------+-------+---------+-----------+



Messages
--------

+-----------+------------+
|message id |occurrences |
+===========+============+
|C0103      |120         |
+-----------+------------+
|C0322      |71          |
+-----------+------------+
|C0301      |23          |
+-----------+------------+
|C0324      |17          |
+-----------+------------+
|W0612      |13          |
+-----------+------------+
|C0111      |10          |
+-----------+------------+
|W0212      |5           |
+-----------+------------+
|W0611      |3           |
+-----------+------------+
|W0403      |3           |
+-----------+------------+
|R0914      |3           |
+-----------+------------+
|W0702      |2           |
+-----------+------------+
|W0622      |2           |
+-----------+------------+
|W0311      |2           |
+-----------+------------+
|W0231      |2           |
+-----------+------------+
|C0323      |2           |
+-----------+------------+



Global evaluation
-----------------
Your code has been rated at -3.37/10

Duplication
-----------

+-------------------------+------+---------+-----------+
|                         |now   |previous |difference |
+=========================+======+=========+===========+
|nb duplicated lines      |0     |NC       |NC         |
+-------------------------+------+---------+-----------+
|percent duplicated lines |0.000 |NC       |NC         |
+-------------------------+------+---------+-----------+



Statistics by type
------------------

+---------+-------+-----------+-----------+------------+---------+
|type     |number |old number |difference |%documented |%badname |
+=========+=======+===========+===========+============+=========+
|module   |1      |NC         |NC         |100.00      |100.00   |
+---------+-------+-----------+-----------+------------+---------+
|class    |2      |NC         |NC         |0.00        |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|method   |2      |NC         |NC         |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|function |11     |NC         |NC         |27.27       |81.82    |
+---------+-------+-----------+-----------+------------+---------+



External dependencies
---------------------
::

    numpy (network-planner-algorithm-tools.microgridDirectLV_improved)
    osgeo 
      \-ogr (network-planner-algorithm-tools.microgridDirectLV_improved)



